apply plugin: 'com.android.application'

android {
    compileSdkVersion 30
//    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.repair.cbg"
        minSdkVersion 23
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        //必须，告知RxHttp你依赖的okhttp版本，目前已适配 v3.12.0 - v4.8.1版本  (v4.3.0除外)
                        rxhttp_okhttp : '4.8.1',
                        //使用asXxx方法时必须，告知RxHttp你依赖的rxjava版本，可传入rxjava2、rxjava3
                        rxhttp_rxjava : 'rxjava2',
                        rxhttp_package: 'rxhttp'   //非必须，指定RxHttp类包名
                ]
            }
        }
    }

    buildFeatures {
        viewBinding = true
        dataBinding = true
    }
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}
repositories {
    flatDir {
        dirs 'libs'
    }
}
dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.navigation:navigation-fragment:2.3.5'
    implementation 'androidx.navigation:navigation-ui:2.3.5'


    //lombok
    compileOnly 'org.projectlombok:lombok:1.18.18'
    annotationProcessor 'org.projectlombok:lombok:1.18.18'


    api "com.github.bumptech.glide:glide:4.9.0"
    annotationProcessor "com.github.bumptech.glide:compiler:4.9.0"


    //Androidx 和 其他官方包
    api "androidx.legacy:legacy-support-v4:1.0.0"
    api "androidx.legacy:legacy-support-v13:1.0.0"
    api "androidx.cardview:cardview:1.0.0"
    api "androidx.fragment:fragment:1.3.2"
    api 'androidx.preference:preference:1.1.1'
    api "androidx.vectordrawable:vectordrawable-animated:1.1.0"
    api "com.google.android.material:material:1.3.0"
    api "androidx.recyclerview:recyclerview:1.2.0"
    api 'androidx.appcompat:appcompat:1.2.0'
    api 'androidx.annotation:annotation:1.2.0'
    api 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    //1.1.0  是androidx版本
    api 'com.google.android:flexbox:2.0.1'
    api 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    api 'androidx.viewpager2:viewpager2:1.0.0'

    api "com.google.android.material:material:1.3.0"
    api 'com.blankj:utilcode:1.29.0'
    api 'com.github.zhaokaiqiang.klog:library:1.6.0'
    api "com.github.goldze:MVVMHabit:3.1.6"
    api "com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.4"
    api "com.lxj:xpopup:2.2.0"

    //网络
    //以下3个为必须，
    implementation 'com.ljx.rxhttp:rxhttp:2.4.0'
    implementation 'com.squareup.okhttp3:okhttp:4.8.1' //rxhttp v2.2.2版本起，需要手动依赖okhttp
    implementation 'com.squareup.okhttp3:logging-interceptor:4.8.1'
    implementation 'com.ljx.rxlife2:rxlife-rxjava:2.0.0' //管理RxJava2生命周期，页面销毁，关闭请求

    annotationProcessor 'com.ljx.rxhttp:rxhttp-compiler:2.4.0'
    //生成RxHttp类，非kotlin项目，请使用annotationProcessor代替kapt
    //rxjava2   (RxJava2/Rxjava3二选一，使用asXxx方法时必须)
    implementation 'io.reactivex.rxjava2:rxjava:2.2.8'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

//    api 'com.github.xuexiangjys:XUI:1.1.5'
    //json解析
    api "com.google.code.gson:gson:2.8.6"
    api "com.alibaba:fastjson:1.1.72.android"
    api "com.tencent:mmkv:1.2.2"
    implementation 'com.annimon:stream:1.2.1'

    //    implementation 'com.github.CarGuo:GSYRecordWave:2.0.1'
    implementation "com.github.permissions-dispatcher:permissionsdispatcher:4.8.0"
    annotationProcessor "com.github.permissions-dispatcher:permissionsdispatcher-processor:4.8.0"
}